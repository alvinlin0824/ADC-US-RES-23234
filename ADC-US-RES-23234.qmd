---
title: "ADC-US-RES-23234 Insulin Pump Suspension Study"
description: "To characterize beta-hydroxybutyrate ketone levels in people with type 1 diabetes using continuous subcutaneous insulin infusion (CSII) during a planned suspension of their insulin pump"
author: "Alvin, Lin"
date: "`r Sys.Date()`"
format:
   html:
     theme: flatly
     self-contained: true
toc: true
toc-depth: 3
toc-location: left
execute:
  echo: false
  warning: false 
  keep-md: true
---

<!-- EDC \\wf00168p.oneabbott.com\data1\CDM\ADC-US-RES-23234\OpenClinica\Current -->

<!-- UUU \\wf00168p.oneabbott.com\data1\CDM\ADC-US-RES-23234\UploadData\UUU\UUU_DataFiles -->

<!-- Study Protocol \\oneabbott.com\dept\ADC\Technical_OPS\Clinical_Affairs\Clinical Study Files\Apollo\ADC-US-RES-23234_IDE Pump Suspension Study\Protocol -->

<!-- CRF \\oneabbott.com\dept\ADC\Technical_OPS\Clinical_Affairs\Clinical Study Files\Apollo\ADC-US-RES-23234_IDE Pump Suspension Study\Case Report Forms\Version B\Approved\pdf -->

<!-- DMP \\oneabbott.com\dept\ADC\Technical_OPS\Clinical_Affairs\Clinical Study Files\Apollo\ADC-US-RES-23234_IDE Pump Suspension Study\CDM\Study_Binder\Data_Management_Plan\Version_1.0\Final -->

```{r}
#| label: Libaray Packages 
#| message: false
library(tidyverse)
library(reactable)
library(haven)
library(janitor)
library(reactablefmtr)
library(htmltools)
library(UUU)
library(fs)
library(highcharter)
library(vroom)
library(gt)
```
<!-- UDP  , type = "directory"-->
```{r}
#| label: Import all events, gluc and glucPlus files csv
file_list <- dir_ls(gsub("\\\\", "/", r"(\\wf00168p.oneabbott.com\data1\CDM\ADC-US-RES-23234\UploadData\UUU\UUU_DataFiles)"),recurse = T)
```

```{r}
#| label: Copy extracted_realm.zip to T drive
file_list[str_detect(file_list,"extracted_realm.zip")][c(1,2)] |> 
  file_copy(gsub("\\\\", "/", r"(\\oneabbott.com\dept\ADC\Technical_OPS\Clinical_Affairs\Clinical Study Files\Apollo\ADC-US-RES-23234_IDE Pump Suspension Study\Statistics\Programs\Datasets\AL)"))
```

```{r}
file_list[str_detect(file_list,"upload_info.xml") & !str_detect(file_list,regex("Transfers"))][c(1,2)] |> 
  file_copy(gsub("\\\\", "/", r"(\\oneabbott.com\dept\ADC\Technical_OPS\Clinical_Affairs\Clinical Study Files\Apollo\ADC-US-RES-23234_IDE Pump Suspension Study\Statistics\Programs\Datasets\AL)")) 
```

```{r}
dir_copy(dir_ls(gsub("\\\\", "/", r"(\\oneabbott.com\dept\ADC\Technical_OPS\Clinical_Affairs\Clinical Study Files\Apollo\ADC-US-RES-23234_IDE Pump Suspension Study\Statistics\Programs\Datasets\AL)"))[2],
          dir_ls(gsub("\\\\", "/", r"(\\oneabbott.com\dept\ADC\Technical_OPS\Clinical_Affairs\Clinical Study Files\Apollo\ADC-US-RES-23234_IDE Pump Suspension Study\Statistics\Programs\Datasets\AL)"))[1])
```


```{r}
dir_ls(gsub("\\\\", "/", r"(\\oneabbott.com\dept\ADC\Technical_OPS\Clinical_Affairs\Clinical Study Files\Apollo\ADC-US-RES-23234_IDE Pump Suspension Study\Statistics\Programs\Datasets\AL)"))
```

```{r}
#| label: Upload_info.xml
file.copy(from = file_list[str_detect(file_list,"upload_info.xml") & !str_detect(file_list,regex("Transfers"))][2],
          to = dir_ls(gsub("\\\\", "/", r"(\\oneabbott.com\dept\ADC\Technical_OPS\Clinical_Affairs\Clinical Study Files\Apollo\ADC-US-RES-23234_IDE Pump Suspension Study\Statistics\Programs\Datasets\AL)"))[2], recursive = TRUE)
```

```{r}
#| label: extracted_realm.zip
# file_list[str_detect(file_list,"extracted_realm.zip")]
```



```{r}
# file_list[str_detect(file_list,"dualsensors") & !str_detect(file_list,regex("Transfers"))][1] |> 
#   zip(zipfile = "testZip",extras = "-x")
```



<!-- UDP -->

```{r}
#| warning: false
mobi(events = events_path,gluc = gluc_path,index = 16) |> View()
```

```{r}
#|label: Import IV1
iv1 <- read_sas(gsub("\\\\", "/", r"(\\wf00168p.oneabbott.com\data1\CDM\ADC-US-RES-23234\OpenClinica\Current\iv1.sas7bdat)"))
iv1 <- iv1 |> 
       filter(!str_detect(IVYN01,regex("Check here if no data recorded",ignore_case = T))) |>
       mutate(Subject = as.character(Subject)) |>
       arrange(Subject)
```

```{r}
#|label: Import IV2
iv2 <- read_sas(gsub("\\\\", "/", r"(\\wf00168p.oneabbott.com\data1\CDM\ADC-US-RES-23234\OpenClinica\Current\iv2.sas7bdat)"))
iv2 <- iv2 |>
       mutate(Subject = as.character(Subject),
              IVID01 = as.character(IVID01)) |>
       arrange(Subject)
```

```{r}
#| label: IV2 left join IV1
iv12 <- iv2 |> 
        select(Subject,`__STUDYEVENTREPEATKEY`,IVID01:IVCOM01) |> 
        left_join(iv1 |>
                  select(Subject,`__STUDYEVENTREPEATKEY`,IVDTC01),
                  by = join_by("Subject","__STUDYEVENTREPEATKEY")) |> 
        select(!`__STUDYEVENTREPEATKEY`) |> 
        arrange(Subject,IVDTC01,IVID01)
```

```{r}
#|label: Import KD1
kd1 <- read_sas(gsub("\\\\", "/", r"(\\wf00168p.oneabbott.com\data1\CDM\ADC-US-RES-23234\OpenClinica\Current\kd1.sas7bdat)"))
kd1 <- kd1 |>
       filter(!str_detect(KDYN01,regex("Check here if no data recorded",ignore_case = T))) |>
       mutate(Subject = as.character(Subject)) |>
       arrange(Subject)
```

```{r}
#|label: Import kd2
kd2 <- read_sas(gsub("\\\\", "/", r"(\\wf00168p.oneabbott.com\data1\CDM\ADC-US-RES-23234\OpenClinica\Current\kd2.sas7bdat)"))
kd2 <- kd2 |>
       mutate(Subject = as.character(Subject),
              KDID01 = as.character(KDID01)) |>
       arrange(Subject)
```

```{r}
#| label: KD2 left join KD1
kd12 <- kd2 |> 
        select(Subject,KDID01:last_col()) |> 
        left_join(kd1 |>
                  select(Subject,KDDTC01),
                  by = join_by(Subject)) |>
        arrange(Subject,KDID01)
```

```{r}
#| label: iv12 left join kd12
ivkd12 <- iv12 |> 
          left_join(kd12,by = join_by(Subject,IVID01 == KDID01, IVDTC01 == KDDTC01)) |> 
          mutate(`IV Draw Date Time` = ymd_hm(str_c(IVDTC01,IVTM01,sep = " ")),.keep = "unused")
```

```{r}
summary_calculation <- list(Mean = ~ mean(.x, na.rm = T),
                            Median = ~ median(.x, na.rm = T),
                            SD = ~ sd(.x, na.rm = T),
                            Min = ~ min(.x, na.rm = T),
                            Max = ~ max(.x, na.rm = T),
                            N = ~ sum(!is.na(.x),na.rm = T))
ivkd12 |> 
   filter(IVVAL01 == "Valid") |> 
   group_by(Subject) |> 
   summarise_at("KDORES02",summary_calculation) |> 
   gt() |>
   cols_align(align = "center") |>
   fmt_number(columns = Mean:Max,decimals = 2) |> 
   opt_stylize(style = 6, color = "blue") |> 
   tab_header(title = md("**Ketone Test Result (mmol/L)**"))
```

```{r}
breakdown_condition_plot <- function(Id) {
  highchart() %>%
  # Add title
  hc_title(text = str_c("Subject = ",Id)) %>% 
  # continuous Sensor Data
  # hc_add_series(
  #   # name = "Libre Sensor Reading",
  #   data = UUU %>%
  #          filter(`Subject ID` == Id,
  #                 Type != "SENSOR_STARTED (58)") %>%
  #          # multiple and consecutive wears
  #          arrange(`Date Time`) %>%
  #          # 904 is Real-time glucose 906 is current glucose
  #          mutate(Type = case_when(Type == "906" ~ "Current Glucose",
  #                                  Type == "904" ~ "Real-Time Glucose",
  #                                 .default =  "Historic Glucose")),
  #   type = "line",
  #   hcaes(x = datetime_to_timestamp(`Date Time`), y = Gl/18.016, group = Type)) %>%
    # Sibionics data 
    # hc_add_series(
    # name = "Sibionics",
    # data = Sib %>%
    #        filter(`Subject ID` == Id),
    # type = "line",
    # color = "#7FFF00",
    # # marker = list(symbol = "triangle"),
    # hcaes(x = datetime_to_timestamp(`Date Time`), y = Gl)) %>%
    # BG data 
    hc_add_series(
    name = "Ketone Test Result",
    data = ivkd12 %>%
           filter(Subject == Id),
    type = "scatter",
    color = "#FF0000",
    # marker = list(symbol = "triangle"),
    hcaes(x = datetime_to_timestamp(`IV Draw Date Time`), y = KDORES02)) %>% 
    # Add X label
    hc_xAxis(title = list(text = "Date Time"),
             type = "datetime", 
             dateTimeLabelFormats = list(day = '%d %b %y')) %>%
    # Add Y axis
    hc_yAxis(title = list(text = "Ketone Test Result (mmol/L)")) %>%
    # Change the size of marker
    hc_plotOptions(scatter = list(
                            marker = list(radius = 1.9, symbol = "circle"))) %>%
    # Change the format of point
    hc_tooltip(pointFormat = '{point.x: %Y-%m-%d %H:%M:%S} {point.y:.1f} ')  %>% 
    # Add zoom in function
    hc_chart(zoomType = "xy") %>% 
    # Add navigator
    hc_navigator(enabled = TRUE)
    # {if (UUU %>%
    #      filter(Type != "SENSOR_STARTED (58)") %>%
    #      filter(`Subject ID` == Id, `Condition ID` == Condition) %>% 
    #      nrow() != 0) 
    #      hc_navigator(.,enabled = TRUE) else .}  %>%
    # {if (UUU %>%
    #      filter(Type != "SENSOR_STARTED (58)") %>%
    #      filter(`Subject ID` == Id, `Condition ID` == Condition) %>% 
    #      nrow() == 0) 
    #      hc_navigator(.,enabled = TRUE,series = list(color = "white")) else .} 
}
```

```{r}
#| eval: false
breakdown_condition_plot(Id = "90002")
```