---
title: "ADC-US-RES-23234 Insulin Pump Suspension Study `r params$title1`"
description: "To characterize beta-hydroxybutyrate ketone levels in people with type 1 diabetes using continuous subcutaneous insulin infusion (CSII) during a planned suspension of their insulin pump"
author: "Alvin, Lin"
date: "`r Sys.Date()`"
format:
   html:
     theme: flatly
     self-contained: true
toc: true
toc-depth: 3
toc-location: left
execute:
  echo: false
  warning: false 
  keep-md: true
params:
  analysis: FALSE
  plot: TRUE
  title1: "Profile Plot"
  title2: "Accuracy Performance"
---

<!-- EDC \\wf00168p.oneabbott.com\data1\CDM\ADC-US-RES-23234\OpenClinica\Current -->

<!-- UUU \\wf00168p.oneabbott.com\data1\CDM\ADC-US-RES-23234\UploadData\UUU\UUU_DataFiles -->

<!-- Study Protocol \\oneabbott.com\dept\ADC\Technical_OPS\Clinical_Affairs\Clinical Study Files\Apollo\ADC-US-RES-23234_IDE Pump Suspension Study\Protocol -->

<!-- CRF \\oneabbott.com\dept\ADC\Technical_OPS\Clinical_Affairs\Clinical Study Files\Apollo\ADC-US-RES-23234_IDE Pump Suspension Study\Case Report Forms\Version B\Approved\pdf -->

<!-- DMP \\oneabbott.com\dept\ADC\Technical_OPS\Clinical_Affairs\Clinical Study Files\Apollo\ADC-US-RES-23234_IDE Pump Suspension Study\CDM\Study_Binder\Data_Management_Plan\Version_1.0\Final -->

<!-- Lori Rankin-Grundvig Site 133 Yale. Martin, Pamela Site 009 Rainier -->

```{r}
#| label: Libaray Packages 
#| message: false
library(tidyverse)
library(reactable)
library(haven)
library(janitor)
library(reactablefmtr)
library(htmltools)
library(UUU)
library(fs)
library(highcharter)
library(vroom)
library(gt)
```

<!-- UDP -->
```{r}
#| label: Import csv
#| eval: false
file_list <- dir_ls(gsub("\\\\", "/", r"(\\wf00168p.oneabbott.com\data1\CDM\ADC-US-RES-23234\UploadData\UUU\UUU_DataFiles)"),recurse = T)
```

```{r}
#| label: Copy extracted_realm.zip to T drive
#| eval: false
file_list[str_detect(file_list,"extracted_realm.zip|dualsensors_upload_info.xml") & !str_detect(file_list,regex("Transfers|Archive"))] |>
  file_copy(gsub("\\\\", "/", r"(C:\UDP\InputFiles)"))
```

```{r}
#| label: Move UDP output files to T drive
# file_copy(gsub("\\\\", "/", r"(C:\UDP\OutputFiles\Output_2023-09-06-15-01)"),gsub("\\\\", "/", r"(\\oneabbott.com\dept\ADC\Technical_OPS\Clinical_Affairs\Clinical Study Files\Apollo\ADC-US-RES-23234_IDE Pump Suspension Study\Statistics\Upload Data)"))
```
<!-- UDP -->

```{r}
#|label: Import IV1
iv1 <- read_sas(gsub("\\\\", "/", r"(\\wf00168p.oneabbott.com\data1\CDM\ADC-US-RES-23234\OpenClinica\Current\iv1.sas7bdat)"))
iv1 <- iv1 |>
       filter(!str_detect(IVYN01,regex("Check here if no data recorded",ignore_case = T))) |>
       mutate(Subject = as.character(Subject)) |>
       arrange(Subject)
```

```{r}
#|label: Import IV2
iv2 <- read_sas(gsub("\\\\", "/", r"(\\wf00168p.oneabbott.com\data1\CDM\ADC-US-RES-23234\OpenClinica\Current\iv2.sas7bdat)"))
iv2 <- iv2 |>
       filter(!is.na(IVID01)) |> 
       mutate(Subject = as.character(Subject),
              IVID01 = as.character(IVID01)) |>
       arrange(Subject)
```

```{r}
#| label: IV2 left join IV1
iv12 <- iv2 |> 
        select(Subject,`__STUDYEVENTREPEATKEY`,IVID01,IVTM01,IVVAL01) |> 
        left_join(iv1 |>
                  select(Subject,`__STUDYEVENTREPEATKEY`,IVDTC01),
                  by = join_by("Subject","__STUDYEVENTREPEATKEY")) |> 
        select(!`__STUDYEVENTREPEATKEY`) |> 
        arrange(Subject,IVDTC01)
```

```{r}
#|label: Import kgr1
kgr1 <- read_sas(gsub("\\\\", "/", r"(\\wf00168p.oneabbott.com\data1\CDM\ADC-US-RES-23234\OpenClinica\Current\kgr1.sas7bdat)"))
kgr1 <- kgr1 |>
        filter(!str_detect(KRYN01,regex("Check here if no data recorded",ignore_case = T))) |>
        mutate(Subject = as.character(Subject)) |>
        arrange(Subject)
```

```{r}
#|label: Import kgr2
kgr2 <- read_sas(gsub("\\\\", "/", r"(\\wf00168p.oneabbott.com\data1\CDM\ADC-US-RES-23234\OpenClinica\Current\kgr2.sas7bdat)"))
kgr2 <- kgr2 |>
        mutate(Subject = as.character(Subject),
               KRSEQ02 = as.character(KRSEQ02)) |>
        arrange(Subject)
```

```{r}
#| label: KGR2 left join KGR1
kgr12 <- kgr2 |> 
         select(Subject,KRSEQ02:KRDTC03) |> 
         left_join(kgr1 |> 
                   select(Subject,KRDTC01),
                   by = join_by(Subject == Subject)) |> 
         arrange(Subject,KRDTC01)
```

```{r}
#| label: KGR12 left join IV12
kgriv12 <- kgr12 |> 
           filter(!is.na(KRSEQ02)) |> 
           # Manually Change Sample ID
           mutate(KRSEQ02 = case_when(
            str_detect(Subject,"1330001") & str_length(KRSEQ02) == 1 ~ str_c("1010",KRSEQ02),
            str_detect(Subject,"1330001") & str_length(KRSEQ02) == 2 ~ str_c("101",KRSEQ02),
            str_detect(Subject,"1330002") & str_length(KRSEQ02) == 1 ~ str_c("1020",KRSEQ02),
            str_detect(Subject,"1330002") & str_length(KRSEQ02) == 2 ~ str_c("102",KRSEQ02),
            str_detect(Subject,"1330004") & KRSEQ02 == "10730" ~ "10430",
            .default = KRSEQ02)) |> 
           left_join(iv12, 
                     by = join_by(Subject == Subject,KRSEQ02 == IVID01, KRDTC01 == IVDTC01)) |> 
           mutate(`Ketone Date Time` = ymd_hm(str_c(KRDTC01,KRDTC02,sep = " ")),
                  `Glucose Date Time` = ymd_hm(str_c(KRDTC01,KRDTC03,sep = " "))
                  ,.keep = "unused",.before = KRSEQ03) |> 
           arrange(Subject,`Ketone Date Time`) |> 
           filter(str_detect(IVVAL01,"Valid"))
```

```{r}
#| label: Get Time duration
ketone <- kgriv12 |> 
          left_join(
            # Find the Peak Time and consider duplicated max values
            kgriv12 |> 
              slice_max(KRSEQ01,n = 1,with_ties = F,by = Subject) |> 
              select(Subject, `Peak Time` = `Ketone Date Time`),
              by = join_by(Subject)) |> 
          mutate(`Time < 1 mmol/L` = case_when(max(KRSEQ01) > 1 & 
                                             `Ketone Date Time` > `Peak Time` & 
                                              KRSEQ01 < 1  ~ `Ketone Date Time`),
                 `Time < 1 mmol/L` = first(`Time < 1 mmol/L`,na_rm = T),
                 duration_to_peak = as.numeric(difftime(`Ketone Date Time`,first(`Ketone Date Time`),units = "hours")),
                 duration_to_below_1mmol = as.numeric(difftime(`Time < 1 mmol/L`,`Peak Time` ,units = "hours")),.by = Subject) 
```

```{r eval = params$analysis}
#| label: Summary for Ketone Reference
summary_calculation <- list(Mean = ~ mean(.x, na.rm = T),
                            Median = ~ median(.x, na.rm = T),
                            SD = ~ sd(.x, na.rm = T),
                            Min = ~ min(.x, na.rm = T),
                            Max = ~ max(.x, na.rm = T),
                            N = ~ sum(!is.na(.x),na.rm = T))
ketone |>
   group_by(Subject) |>
   summarise_at("KRSEQ01",summary_calculation) |>
   # Fix round half to even
   mutate(across(c(Mean,SD), ~ round(.x + 0.0001,2))) |> 
   gt() |>
   cols_align(align = "center") |>
   opt_stylize(style = 6, color = "blue") |>
   tab_header(title = md("**Ketone Test Result (mmol/L)**"))
```

```{r eval = params$analysis}
#| label: Duration Table
ketone |> 
  slice_max(KRSEQ01,n = 1,with_ties = F,by = Subject) |> 
  left_join(
    ketone |> 
    select(Subject,`Start Time` = `Ketone Date Time`) |> 
    slice(1,.by = Subject),by = join_by(Subject)) |> 
  select(Subject,`Start Time`,`Peak Time`,
         `Max Ketone Reference(mmol/L)` = KRSEQ01,`Time once < 1 mmol/L` = `Time < 1 mmol/L`,
         `Time to Peak(Hours)` = duration_to_peak, `Time to < 1 mmol/L(Hours)` = duration_to_below_1mmol) |>
  # Fix round half to even
  mutate(across(c(`Time to Peak(Hours)`,`Time to < 1 mmol/L(Hours)`), ~ round(.x + 0.0001,2))) |> 
  arrange(Subject) |> 
  gt() |>
  cols_align(align = "center") |>
  opt_stylize(style = 6, color = "blue")
  # tab_header(title = md("**Ketone Test Result (mmol/L)**"))
```

```{r eval = params$analysis}
#| label: Summary for Peak
#| column: body
ketone |> 
     filter(KRSEQ01 == max(KRSEQ01) & !is.na(`Time < 1 mmol/L`) ,.by = Subject) |> 
     slice_min(`Ketone Date Time`, n = 1, with_ties = F,by = Subject) |> 
     summarise(across(c(KRSEQ01,duration_to_peak,duration_to_below_1mmol),summary_calculation[c(1,3,6)],.names = "{.col} {.fn}")) |> 
     gt() |> 
     cols_align(align = "center") |>
     tab_spanner(label = "Maximum Ketone Level Achieved",columns = c("KRSEQ01 Mean","KRSEQ01 SD","KRSEQ01 N")) |>
     tab_spanner(label = "Time(Hours) To Peak Ketone Level From First Test",columns = c("duration_to_peak Mean","duration_to_peak SD","duration_to_peak N")) |>
     tab_spanner(label = "Time(Hours) From Peak Ketone Level to Ketone Level < 1 mmol/L",columns = c("duration_to_below_1mmol Mean","duration_to_below_1mmol SD","duration_to_below_1mmol N")) |>
     fmt_number(columns = contains(c("Mean","SD")),decimals = 2) |>
     cols_label(
      `KRSEQ01 Mean` = "Mean",`KRSEQ01 SD` = "SD",
      `KRSEQ01 N` = "N",
      `duration_to_peak Mean` = "Mean",`duration_to_peak SD` = "SD",`duration_to_peak N` = "N",
      `duration_to_below_1mmol Mean` = "Mean",`duration_to_below_1mmol SD` = "SD",
      `duration_to_below_1mmol N` =  "N") |>
      opt_stylize(style = 6, color = "blue")
```

```{r eval = params$analysis}
#| label: Ketone Reference Plot
#| fig-align: center
ketone |>
   mutate(eTime = as.numeric(difftime(`Ketone Date Time`,first(`Ketone Date Time`),units = "hours")),.by = Subject) |> 
  ggplot(aes(x = eTime, y = KRSEQ01, color = Subject)) +
  geom_point() + 
  geom_line() + 
  scale_x_continuous(expand = c(0,0)) + 
  scale_y_continuous(expand = c(0,0)) + 
  geom_hline(yintercept = 1,linewidth = 1) + 
  labs(title = "Ketone Reference",x = "Time(Hours)", y = "Ketone Test Result (mmol/L)") +
  theme_bw() +
  theme(panel.grid.major.y = element_blank(),panel.grid.minor.y = element_blank(),legend.position = "bottom",plot.title = element_text(hjust = 0.5))
```

```{r eval = params$analysis}
#| label: Ketone Vary Over Time
#| fig-align: center
ketone |>
   mutate(eTime = as.numeric(difftime(`Ketone Date Time`,first(`Ketone Date Time`),units = "hours")),
          lag_diff = KRSEQ01 - lag(KRSEQ01),
          .by = Subject) |> 
  ggplot(aes(x = eTime, y = lag_diff, color = Subject)) +
  geom_point() + 
  geom_line() + 
  labs(title = "Ketone Vary Over Time",x = "Time(Hours)", y = "Ketone Test Result (mmol/L)") +
  scale_x_continuous(breaks = c(seq(1,8,1))) + 
  scale_y_continuous(breaks = c(seq(-1.0,1.0,0.2)),limits = c(-1,1)) +
  theme_bw() +
  theme(panel.grid.major.y = element_blank(),panel.grid.minor.y = element_blank(),legend.position = "bottom",plot.title = element_text(hjust = 0.5))
```

```{r eval = params$analysis}
#| label: Time From Baseline To Peak
#| fig-align: center
ketone |>
  filter(`Peak Time` >= `Ketone Date Time`,.by = Subject) |> 
  ggplot(aes(x = duration_to_peak, y = KRSEQ01, color = Subject)) +
  geom_point() +
  geom_line() +
  scale_x_continuous(expand = c(0,0)) + 
  scale_y_continuous(expand = c(0,0)) + 
  labs(title = "Time From Baseline To Peak",x = "Time(Hours)", y = "Ketone Test Result (mmol/L)") +
  theme_bw() +
  theme(panel.grid.major.y = element_blank(),panel.grid.minor.y = element_blank(),legend.position = "bottom",plot.title = element_text(hjust = 0.5))
```

```{r eval = params$analysis}
#| label: Time From Peak To 1 mmol/L
#| fig-align: center
ketone |>
  filter(`Peak Time` <= `Ketone Date Time` & !is.na(duration_to_below_1mmol) >= 1,.by = Subject) |> 
  ggplot(aes(x = as.numeric(difftime(`Ketone Date Time`,`Peak Time`,units = "hours")), y = KRSEQ01, color = Subject)) +
  geom_point() +
  geom_line() +
  scale_x_continuous(expand = c(0,0)) + 
  scale_y_continuous(expand = c(0,0)) + 
  labs(title = "Time From Peak To 1 mmol/L",x = "Time(Hours)", y = "Ketone Test Result (mmol/L)") +
  theme_bw() +
  theme(panel.grid.major.y = element_blank(),panel.grid.minor.y = element_blank(),legend.position = "bottom",plot.title = element_text(hjust = 0.5))
```

```{r}
#| label: Import ketone events, anaplus files csv
#| eval: false
file_list_ketone <- dir_ls(gsub("\\\\", "/", r"(C:\UDP\OutputFiles\Output_2023-11-02-13-54\outputs)"),recurse = T,glob = "*events.csv|*anaPlus.csv")
```

```{r}
#| label: Ketone Filter events, anaPlus
#| eval: false
events_path_ketone <- filter_path(file_path = file_list_ketone)[[1]]
anaplus_path_ketone <- filter_path(file_path = file_list_ketone)[[5]]
```

```{r}
#| label: Output ketone.rds
#| warning: false
#| eval: false
mobi_anaPlus(events = events_path_ketone, ana = anaplus_path_ketone) |> 
          mutate(`Date Time` = case_when(
            `Sensor Serial Number` == "089CR2FAX" ~ `Date Time` + dhours(2),
            `Sensor Serial Number` == "089CR2ELD" ~ `Date Time` - dhours(1),
              .default = `Date Time`)) |>
  saveRDS(gsub("\\\\", "/", r"(\\oneabbott.com\dept\ADC\Technical_OPS\Clinical_Affairs\Clinical Study Files\Apollo\ADC-US-RES-23234_IDE Pump Suspension Study\Statistics\Programs\Datasets\AL\ketone.rds)"))
```

```{r}
#| label: Import ketone.rds
upload_ketone <- readRDS(gsub("\\\\", "/", r"(\\oneabbott.com\dept\ADC\Technical_OPS\Clinical_Affairs\Clinical Study Files\Apollo\ADC-US-RES-23234_IDE Pump Suspension Study\Statistics\Programs\Datasets\AL\ketone.rds)"))
```

```{r eval = params$plot}
breakdown_condition_plot <- function(Id) {
  highchart() %>%
  # Add title
  hc_title(text = str_c("Subject = ",Id)) %>% 
  # continuous Sensor Data
  hc_add_series(
    # name = "Libre Sensor Reading",
    data = upload_ketone %>%
           filter(`Subject ID` == Id,
                  Type == "906", year(`Date Time`) == 2023) %>%
           slice(seq(1,n(),3),.by = c(`Sensor Serial Number`)) %>%
           # multiple and consecutive wears
           arrange(`Date Time`),
    type = "line",
    yAxis = 0,
    hcaes(x = datetime_to_timestamp(`Date Time`), y = ANA/100, group = `Condition ID`)) %>%
    # Glucose Reference 
    hc_add_series(
    name = "Glucose Test Result",
    data = kgriv12 %>%
           filter(Subject == Id),
    type = "scatter",
    yAxis = 1,
    color = "#9900FF",
    marker = list(symbol = "triangle"),
    hcaes(x = datetime_to_timestamp(`Glucose Date Time`), y = KRSEQ03)) %>%
    # Ketone Reference 
    hc_add_series(
    name = "Ketone Test Result",
    data = kgriv12 %>%
           filter(Subject == Id),
    type = "scatter",
    yAxis = 0,
    color = "#FF0000",
    # marker = list(symbol = "triangle"),
    hcaes(x = datetime_to_timestamp(`Ketone Date Time`), y = KRSEQ01)) %>% 
    # Add X label
    hc_xAxis(title = list(text = "Date Time"),
             type = "datetime", 
             dateTimeLabelFormats = list(day = '%d %b %y')) %>%
    # Add Y axis
    # Add new y axis
    hc_yAxis_multiples(list(title = list(text = "Ketone Test Result(mmol/L)"), opposite = FALSE),
                      list(showLastLabel = FALSE, opposite = TRUE, title = list(text = "Glucose Test Result(mg/dL)"))) %>%
    # hc_yAxis(title = list(text = "Ketone Test Result (mmol/L)")) %>%
    # Change the size of marker
    hc_plotOptions(scatter = list(
                            marker = list(radius = 1.9, symbol = "circle"))) %>%
    # Change the format of point
    hc_tooltip(pointFormat = '{point.x: %Y-%m-%d %H:%M:%S} {point.y:.1f} ')  %>% 
    # Add zoom in function
    hc_chart(zoomType = "xy") %>% 
    # Add navigator
    hc_navigator(enabled = TRUE)
}
```

```{r}
#| column: screen
#| eval: false
breakdown_condition_plot(Id = "1330001")
```

```{r eval = params$plot}
#| label: For Loop Plots
#| column: screen
plots <- list()
for (i in 1:n_distinct(upload_ketone$`Subject ID`)){
  plots[[i]] <- breakdown_condition_plot(Id = unique(upload_ketone$`Subject ID`)[i])
}
htmltools::tagList(plots)
```